<section class="text-level-5">
  <h2 class="mb-50">Wait for events, not time</h2>

  <p class="mt-0 fragment" data-fragment-index="1">
    The browser is asynchronous!
  </p>

  <p class="mt-0 fragment" style="margin-left: 3em" data-fragment-index="2">
    ...So when can we verify the result of async operations?
  </p>

  <if-pw>
    <table class="mt-50r no-border">
      <tr>
        <td class="fragment" width="25%" data-fragment-index="3">
          <pre class="text-size-7"><code class="ts" data-trim>
            await page.waitForTimeout(2000)
          </code></pre>
        </td>
        <td class="fragment text-center" width="25%" data-fragment-index="4">
          Wait for 2s
        </td>
        <td width="" class="flex fragment text-center" data-fragment-index="4">
          <i class="emo emoji-slightly_frowning_face"></i>
          Avoid waiting for fixed delay!<br />
          May be used for debugging...
        </td>
      </tr>
      <tr>
        <td class="fragment" data-fragment-index="5">
          <pre class="text-size-7"><code class="ts" data-trim>
            await expect(page.getByText('welcome'))
              .toBeVisible()
          </code></pre>
        </td>
        <td class="fragment text-center" data-fragment-index="6">
          Implicit wait
        </td>
        <td class="fragment text-center" data-fragment-index="6">
          <i class="emo emoji-thumbup"></i>Good
        </td>
      </tr>
      <tr>
        <td class="fragment" data-fragment-index="7">
          <pre class="text-size-7"><code class="ts" data-trim>
            expect(
              await page.getByText('welcome').isVisible()
            ).toBe(true)
          </code></pre>
        </td>
        <td class="fragment text-center" data-fragment-index="8">No wait</td>
        <td class="fragment text-center" data-fragment-index="8">
          <i class="emo emoji-x"></i>Bad!
        </td>
      </tr>
      <tr>
        <td class="fragment" data-fragment-index="9">
          <pre class="text-size-7"><code class="ts" data-trim>
            const requestPromise =
              page.waitForRequest('**/*logo*.png')
            await page.goto('https://wikipedia.org')
            const request = await requestPromise
          </code></pre>
        </td>
        <td class="fragment text-center" data-fragment-index="10">
          Start waiting for request before <code>goto()</code>.<br />Note no
          <code>await</code>
        </td>
        <td class="fragment text-center" data-fragment-index="10">
          <i class="emo emoji-thumbup"></i>Good
        </td>
      </tr>
    </table>
  </if-pw>
  <if-cy>
    <pre class="mt-50 fragment"><code class="typescript">
      // bad
      cy.wait(2000)  // wait for 2 seconds
  
      // Good
      cy.contains('Welcome')  // wait for the page to contain "welcome"
  
      // Good
      cy.intercept('POST', '/api/basket/add-product').as('addProductToBasket')
      cy.get('button').contains('Add to basket').click()
      cy.wait('@addProductToBasket')  // wait for a http response
    </code></pre>
  </if-cy>

  <small class="mt-50 fragment">
    <p>More on implicit waits:</p>
    <if-pw>
      <ul>
        <li>https://playwright.dev/java/docs/actionability</li>
        <li>https://playwright.dev/docs/events</li>
      </ul>
    </if-pw>
    <if-cy>
      <span
        >https://docs.cypress.io/guides/references/best-practices#Unnecessary-Waiting</span
      >
    </if-cy>
  </small>
</section>
