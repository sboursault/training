{% if(pw) { %}
<section class="text-level-3">
  <h2>Locators that resist changes</h2>

  <p class="fragment">Locators are used to find element(s) on the page</p>

  <div class="mt-100r fragment">
    <p>Playwright's recommanded locators</p>
    <ul class="text-level-5">
      <li>
        <code>page.getByRole()</code> to locate by explicit and implicit
        accessibility attributes
      </li>
      <li><code>page.getByText()</code> to locate by text content</li>
      <li>
        <code>page.getByLabel()</code> to locate a form control by associated
        label's text
      </li>
      <li>
        <code>page.getByPlaceholder()</code> to locate an input by placeholder
      </li>
      <li>
        <code>page.getByAltText()</code> to locate an element, usually image, by
        its text alternative
      </li>
      <li>
        <code>page.getByTitle()</code> to locate an element by its title
        attribute
      </li>
      <li>
        <code>page.getByTestId()</code> to locate an element based on its
        data-testid attribute (other attributes can be configured)
      </li>
    </ul>
  </div>

  <div class="mt-100r fragment">
    <p>Example</p>
    <pre class="mt-50r">
      <code class="ts">
        await page.getByLabel('User Name').fill('John');
        await page.getByLabel('Password').fill('secret-password');
        await page.getByRole('button', { name: 'Sign in' }).click();
        await expect(page.getByText('Welcome, John!')).toBeVisible();
      </code>
    </pre>
  </div>

  <small class="fragment mt-200r">
    More on using these locators:
    <span> https://playwright.dev/docs/locators </span>
  </small>
</section>
{% } %}

<section>
  {% if(cy) { %}
  <h2>Locators that resist changes</h2>
  {% } %}

  <h3 class="mt-50r no-bullet">CSS selectors</h3>

  <div class="fragment">
    <p class="mt-300"><strong>CSS selector</strong> examples:</p>
    <ul>
      <li>https://www.w3schools.com/cssref/css_selectors.php</li>
    </ul>
  </div>

  <div class="fragment">
    <p class="mt-300">
      Verify your selectors with <strong>css-and-xpath-checker</strong> (chrome
      plugin):
    </p>
    <ul>
      <li>
        <a
          href="https://chromewebstore.google.com/detail/css-and-xpath-checker/aoinfihhckpkkcpholfhmkeplbhddipe"
        >
          https://chromewebstore.google.com/detail/css-and-xpath-checker/...
        </a>
      </li>
    </ul>
  </div>
</section>

<section>
  <p class="mt-50r bold">Let's evaluate these locators</p>

  <if-pw>
    <table class="mt-50r no-border" style="width: max-content;">
      <tr class="fragment">
        <td>
          <if-pw>
            <pre class=""><code class="typescript">
              page.locator(                   
                '#navbar > form > button'
              )   
            </code></pre>
          </if-pw>
          <if-cy>
            <pre class=""><code class="typescript">
              cy.get('#navbar > form > button')
                .click()                       
            </code></pre>
          </if-cy>
        </td>
        <td>
          <ul class="no-bullets">
            <li class="fragment">
              <i class="emo emoji-x"></i>breaks with slight changes in the DOM
            </li>
          </ul>
        </td>
      </tr>
      <tr class="fragment">
        <td>
          <if-pw>
            <pre class=""><code class="typescript">
              page.locator(                   
                'button',       
                {hasText: 'Search'}   
              ) 
            </code></pre>
          </if-pw>
          <if-cy>
            <pre class=""><code class="typescript">
              cy.get('button')
                .contains('Search')
                .click()
            </code></pre>
          </if-cy>
        </td>
        <td>
          <ul class="no-bullets">
            <li class="fragment">
              <i class="emo emoji-x"></i>breaks when another button appears <br> with
              the same text
            </li>
          </ul>
        </td>
      </tr>
      <tr class="fragment">
        <td>
          <if-pw>
            <pre class=""><code class="typescript">
              page.locator(           
                '#navbar button'),
                {hasText: 'Search'}
              )    
            </code></pre>
          </if-pw>
          <if-cy>
            <pre class=""><code class="typescript">
              cy.get('#navbar button') 
                .contains('Search')    
                .click()  
            </code></pre>
          </if-cy>
        </td>
        <td>
          <ul class="no-bullets">
            <li class="fragment">
              <i class="emo emoji-thumbup"></i>Quite good :)
            </li>
          </ul>
        </td>
      </tr>
    </table>
  </if-pw>
 
  <p class="fragment text-center">
    Selectors must be <strong>specific enough</strong> to resist DOM changes
  </p>

  <p class="mt-200r fragment">Can we do better?</p>
</section>

<section>
  <p class="mt-300r">Add a <strong>test id</strong> on your html elements</p>

  <pre><code class="html">
    &lt;button
      type="submit"
      class="btn btn btn-secondary"
      data-testid="navbar-search-button"
    >
      Search
    &lt;/button>
  </code></pre>

  <if-pw>
    <pre class="mt-150 fragment"><code class="typescript">
        page.getByTestId('navbar-search-button')  // simple, more efficient
                                                  // and more robust to changes
    </code></pre>
  </if-pw>
  <if-cy>
    <pre class="mt-150 fragment"><code class="typescript">
        cy.get(`[data-testid=navbar-search-button]`)  // simple, more efficient
        .click()                                    // and more robust to changes
    </code></pre>
  </if-cy>

  <aside class="notes">
    The data-cy attribute will not change from CSS style or JS behavioral
    changes, meaning it's not coupled to the behavior or styling of an element.
    Don't test it if it's not testable
  </aside>
</section>
