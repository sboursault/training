{% if(pw) { %}
<section class="text-level-3">
  <h2>Locators that resist changes</h2>

  <p class="fragment">Locators are used to find element(s) on the page</p>

  <div class="mt-100r fragment">
    <p>Playwright's recommanded locators</p>
    <ul class="text-level-5">
      <li>
        <code>page.getByRole()</code> to locate by explicit and implicit
        accessibility attributes
      </li>
      <li><code>page.getByText()</code> to locate by text content</li>
      <li>
        <code>page.getByLabel()</code> to locate a form control by associated
        label's text
      </li>
      <li>
        <code>page.getByPlaceholder()</code> to locate an input by placeholder
      </li>
      <li>
        <code>page.getByAltText()</code> to locate an element, usually image, by
        its text alternative
      </li>
      <li>
        <code>page.getByTitle()</code> to locate an element by its title
        attribute
      </li>
      <li>
        <code>page.getByTestId()</code> to locate an element based on its
        data-testid attribute (other attributes can be configured)
      </li>
    </ul>
  </div>

  <div class="mt-100r fragment">
    <p>Example</p>
    <pre class="mt-50r">
      <code class="ts">
        await page.getByLabel('Email address').fill('John');
        await page.getByLabel('Password').fill('secret-password');
        await page.getByRole('button', { name: 'Log in' }).click();
        await expect(page.getByText('Welcome back')).toBeVisible();
        // lol c'est la solution de l'exo sur le login
      </code>
    </pre>
  </div>

  <small class="fragment mt-200r">
    More on using these locators:
    <span> https://playwright.dev/docs/locators </span>
  </small>
</section>
{% } %} {% if(cy) { %}
<section>
  <h2>Locators that resist changes - TODO</h2>
</section>
{% } %}

<section class="text-level-3">
  <h3>Let's evaluate these locators</h3>

  <if-pw>
    <table class="mt-50r no-border" style="width: max-content">
      <tr class="fragment">
        <td>
          <if-pw>
            <pre><code class="typescript">
              page.locator('#navbar > form > button')   
            </code></pre>
          </if-pw>
          <if-cy>
            <pre><code class="typescript">
              cy.get('#navbar > form > button')
                .click()                       
            </code></pre>
          </if-cy>
        </td>
        <td>
          <ul class="no-bullets">
            <li class="flex-row fragment">
              <i class="emo emoji-x"></i>Breaks with slight changes in the DOM
            </li>
          </ul>
        </td>
      </tr>
      <tr class="fragment">
        <td>
          <if-pw>
            <pre><code class="typescript">
              page.locator('button', {hasText: 'Search'}) 
            </code></pre>
          </if-pw>
          <if-cy>
            <pre><code class="typescript">
              cy.get('button')
                .contains('Search')
                .click()
            </code></pre>
          </if-cy>
        </td>
        <td>
          <ul class="no-bullets">
            <li class="fragment">
              <div class="flex-row justify-content-flex-start">
              <i class="emo emoji-check"></i>
                Good...
                <br />
              </div>
              <small class="fragment ms-200r">
                ... but breaks when another button appears with the same text
              </small>
            </li>
          </ul>
        </td>
      </tr>
      <tr class="fragment">
        <td>
          <pre><code class="typescript">
            page.getByRole('button', { name: 'Search' })
          </code></pre>
        </td>
        <td>
          <ul class="no-bullets">
            <li class="fragment">
              <div class="flex-row justify-content-flex-start">
              <i class="emo emoji-check"></i>
                Good...
                <br />
              </div>
              <small class="fragment ms-200r">
                ... but breaks when another button appears with the same text
              </small>
            </li>
          </ul>
        </td>
      </tr>
      <if-pw>
        <tr class="fragment">
          <td>
            <pre><code class="typescript">
              page.locator(           
                '#navbar button'),
                {hasText: 'Search'}
              )    
            </code></pre>
          </td>
          <td>
            <ul class="no-bullets">
              <li class="flex-row fragment">
                <i class="emo emoji-thumbup"></i>Very good
              </li>
            </ul>
          </td>
        </tr>
        <tr class="fragment">
          <td>
            <pre><code class="typescript">
              page
                .locator('#navbar')
                .getByRole('button', { name: 'Search' })
            </code></pre>
          </td>
          <td>
            <ul class="no-bullets">
              <li class="flex-row fragment">
                <i class="emo emoji-thumbup"></i>Very good
              </li>
            </ul>
          </td>
        </tr>
      </if-pw>
      <if-cy>
        <tr class="fragment">
          <td>
            <pre><code class="typescript">
              cy.get('#navbar button') 
                .contains('Search')    
                .click()  
            </code></pre>
          </td>
          <td>
            <ul class="no-bullets">
              <li class="flex-row fragment">
                <i class="emo emoji-thumbup"></i>Quite good
              </li>
            </ul>
          </td>
        </tr>
      </if-cy>
    </table>
  </if-pw>
  <p class="fragment">
    Selectors must be <strong>specific enough</strong> to resist DOM changes
  </p>
</section>

<section>
  <h3>Consider using test ids</h3>

  <p class="fragment">
    Add a <code>data-testid</code> attribute on your html elements
  </p>

  <pre class="fragment"><code class="html">
    &lt;button
      type="submit"
      class="btn btn btn-secondary"
      data-testid="navbar-search-button"
    >
      Search
    &lt;/button>
  </code></pre>

  <if-pw>
    <pre class="mt-150 fragment"><code class="typescript">
      page.getByTestId('navbar-search-button')
    </code></pre>
  </if-pw>
  <if-cy>
    <pre class="mt-150 fragment"><code class="typescript">
      cy.get(`[data-testid=navbar-search-button]`)
        .click()                        
    </code></pre>
  </if-cy>

  <p class="mt-200r text-center fragment">
    Locators based on <strong>test ids</strong> are simple, efficient and robust
    to changes
  </p>

  <aside class="notes">
    The data-cy attribute will not change from CSS style or JS behavioral
    changes, meaning it's not coupled to the behavior or styling of an element.
    Don't test it if it's not testable
  </aside>
</section>
