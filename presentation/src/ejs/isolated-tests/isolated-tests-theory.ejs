<section>
    <h2>What is test isolation?</h2>

    <div class="fragment mt-300">

        <div class="fragment custom highlight-bold text-center">
            <p>The result of a test should never depend
                <br>on the result of preceding tests
            </p>
        </div>

    </div>

    <div class="fragment mt-300">
        <p> In practice
        <ul>
            <li class="fragment">Isolated tests can run in <strong>any order</strong>
            <li class="fragment">Each test can run <strong>separately from the test suite</strong>
            <li class="fragment">Ultimately, tests can even run in <strong>parallel</strong>!
        </ul>
    </div>

    <aside class="notes">

        In practice, when an isolated test fails, you don't need to investigate on what happend before.
        The issue is either within the test or the verified code

    </aside>


</section>

<section>

    <h2>How to isolate tests?</h2>

    <p class="fragment mt-150r">Before running, each test should set up the environment to a known state

    <p class="fragment mt-150r">On the <strong>browser side</strong>, Cypress already cleans the context between each
        test (DOM, cookies, local and session storage)

    <div class="fragment mt-150r">
        <p>On the <strong>server side</strong>, you may need to
        <ul>
            <li>create a dedicated user for the user
            <li>create dedicated products, or verify their availability
            <li>etc.
        </ul>
    </div>

    <aside class="notes">
        To enforce test isolation...
    </aside>
</section>

<section>

    <h2>Benefits</h2>

    <p class="mt-200">Itâ€™s far more practical to clean up environments in test setups, before each test executes
    <ul>
        <li>When a tests fails, clean-up code might remove important information, making it harder to investigate
        <li>Clean-up procedures after testing may not be executed
        <li>In test setup, you only need to prepare the data relevant for the current test
        <li>When a bug causes a test failure, you will only need to investigate that single test, not 500 other false
            alarms
        <li>You may parallelize your test run
    </ul>

</section>